{"version":3,"file":"static/js/672.5aad00c9.chunk.js","mappings":"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","sources":["images/icons-linear/arrow-left.svg","components/Container/Container.styled.js","components/Container/Container.jsx","images/icons-linear/edit.svg","pages/Diary/Diary.styled.js","components/Dairy/FoodInfo.styled.js","components/Dairy/Dishes/Dishes.styled.js","components/Dairy/Dishes/BreakfastDishes.jsx","components/Dairy/Breakfast.jsx","components/Dairy/Dishes/LunchDishes.jsx","components/Dairy/Lunch.jsx","components/Dairy/Dishes/DinnerDishes.jsx","components/Dairy/Dinner.jsx","components/Dairy/Dishes/SnackDishes.jsx","components/Dairy/Snack.jsx","components/Dairy/FoodInfo.jsx","pages/Diary/Diary.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"arrow-right\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M6.38 3.95312L2.33334 7.99979L6.38 12.0465\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M13.6667 8H2.44666\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.d83f2da68a3f119c6c553c0110084034.svg\";\nexport { ForwardRef as ReactComponent };","import { styled } from 'styled-components';\n\nexport const ContainersStyle = styled.div`\n  min-width: 300px;\n  margin: 0 auto;\n  max-width: 320px;\n  padding: 0 10px;\n/* \n  outline: 2px solid red;\n  outline-offset: -2px; */\n\n  @media screen and (min-width: 834px) {\n    max-width: 834px;\n    padding: 0 27px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 0 34px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ContainersStyle } from './Container.styled';\n\n\n\nexport const Container = ({children}) => {\n    return(\n        <ContainersStyle>\n            {children}\n        </ContainersStyle>\n    );\n};\n\n\n\nContainer.propTypes = {\n    children: PropTypes.node\n};","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgEdit(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"vuesax/linear/edit-2\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"edit-2\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M8.84006 2.39982L3.36673 8.19315C3.16006 8.41315 2.96006 8.84649 2.92006 9.14649L2.6734 11.3065C2.58673 12.0865 3.14673 12.6198 3.92006 12.4865L6.06673 12.1198C6.36673 12.0665 6.78673 11.8465 6.9934 11.6198L12.4667 5.82649C13.4134 4.82649 13.8401 3.68649 12.3667 2.29315C10.9001 0.913152 9.78673 1.39982 8.84006 2.39982Z\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M7.92676 3.3667C8.21342 5.2067 9.70676 6.61337 11.5601 6.80003\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_3\",\n    d: \"M2 14.6665H14\",\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEdit);\nexport default __webpack_public_path__ + \"static/media/edit.f70fa87c2f720e264418b093b9658013.svg\";\nexport { ForwardRef as ReactComponent };","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  padding: 16px 0 16px;\n\n  @media screen and (min-width: 834px) {\n    gap: 16px;\n    padding: 24px 0 16px;\n  }\n\n  h1 {\n    font-size: 24px;\n    font-weight: 500;\n    line-height: 1.3;\n\n    @media screen and (min-width: 834px) {\n      font-size: 30px;\n      line-height: 1.2;\n    }\n  }\n`;\n\nexport const BackLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  svg {\n    width: 16px;\n    height: 16px;\n    stroke: ${props => props.theme.color.primary_grey};\n    transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    @media screen and (min-width: 834px) {\n      width: 24px;\n      height: 24px;\n    }\n\n    @media screen and (min-width: 1440px) {\n    }\n  }\n\n  &:hover {\n    svg {\n      stroke: ${props => props.theme.color.primary_green_lite};\n    }\n  }\n  &:focus {\n    svg {\n      stroke: ${props => props.theme.color.primary_green_lite};\n    }\n  }\n`;\n","import styled from 'styled-components';\n\n\nexport const MealsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: 20px;\n    padding-bottom: 52px;\n\n   .order-one{\n      order: 1;\n    }\n    .order-two{\n      order: 3;\n    }\n    .order-three{\n      order: 2;\n    }\n    .order-four{\n      order: 4;\n    }\n  }\n\n  div {\n    @media screen and (min-width: 1440px) {\n      flex: 1;\n    }\n  }\n`;\n\nexport const MealsInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom: 12px;\n  padding-right: 74px;\n\n  @media screen and (min-width: 834px) {\n    flex-direction: row;\n    margin-bottom: 6px;\n    align-items: center;\n    padding-right: 86px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    flex-direction: row;\n    margin-bottom: 6px;\n    align-items: center;\n    padding-right: 74px;\n  }\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  margin-bottom: 12px;\n\n  @media screen and (min-width: 834px) {\n    margin-bottom: 0px;\n  }\n\n  h2 {\n    font-size: 18px;\n    font-weight: 400;\n    line-height: 1.4;\n\n    @media screen and (min-width: 834px) {\n      font-size: 22px;\n      line-height: 1.5;\n    }\n  }\n`;\n\nexport const TotalNutrients = styled.ul`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n\n  @media screen and (min-width: 834px) {\n    flex-wrap: nowrap;\n    gap: 20px;\n  }\n`;\nexport const NutrientsItem = styled.li`\n  display: flex;\n  gap: 20px;\n  @media screen and (min-width: 834px) {\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const ItemTitle = styled.p`\n  display: flex;\n  gap: 4px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.4;\n\n  span {\n    color: ${props => props.theme.color.primary_grey};\n    font-size: 14px;\n    font-weight: 500;\n    width: 36px;\n  }\n`;\n\nexport const DishesWrapper = styled.div`\n  border-radius: 12px;\n  background: ${props => props.theme.color.primary_black_2};\n  padding: 16px 12px;\n  overflow-y: auto;\n  height: 240px;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media screen and (min-width: 834px) {\n    padding: 32px 14px;\n  }\n`;\n\nexport const Numbers = styled.ul`\n  gap: 40px;\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (min-width: 834px) {\n    gap: 32px;\n  }\n\n  li {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.4;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.div`\n  display: flex;\n\n  .number-list {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 1.4;\n    gap: 40px;\n    margin-right: 16px;\n\n    @media screen and (min-width: 834px) {\n      gap: 32px;\n    }\n  }\n\n  .dish {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    flex-grow: 1;\n\n    @media screen and (min-width: 834px) {\n      gap: 32px;\n    }\n\n    .list-item {\n      display: flex;\n    }\n\n    .dish-title {\n      font-size: 14px;\n      font-weight: 400;\n      line-height: 1.4;\n    }\n\n    .wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n      align-items: baseline;\n      flex-grow: 1;\n      gap: 6px;\n\n      @media screen and (min-width: 834px) {\n        flex-direction: row;\n      }\n    }\n\n    .nutrients-wrapper {\n      display: flex;\n      justify-content: end;\n      gap: 12px;\n      @media screen and (min-width: 834px) {\n        gap: 32px;\n      }\n\n      span {\n        display: flex;\n        color: ${props => props.theme.color.primary_grey};\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 1.5;\n\n        @media screen and (min-width: 834px) {\n          display: none;\n          gap: 0px;\n        }\n      }\n\n      .value {\n        display: flex;\n        gap: 6px;\n        color: ${props => props.theme.color.primary_white};\n        /* width: 30px; */\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 1.5;\n\n        @media screen and (min-width: 834px) {\n          width: 80px;\n        }\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  color: ${props => props.theme.color.primary_green_lite};\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.4;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    width: 16px;\n    height: 16px;\n    stroke: ${props => props.theme.color.primary_green_lite};\n    transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &:hover {\n    color: ${props => props.theme.color.primary_grey};\n    & svg {\n      stroke: ${props => props.theme.color.primary_grey};\n    }\n  }\n\n  &:focus {\n    color: ${props => props.theme.color.primary_grey};\n    & svg {\n      stroke: ${props => props.theme.color.primary_grey};\n    }\n  }\n`;\n\nexport const EditButton = styled.button`\n  display: flex;\n  /* align-items: center; */\n  cursor: pointer;\n  padding: 0;\n  gap: 6px;\n  color: ${props => props.theme.color.primary_grey};\n  background: none;\n  border: none;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.4;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  svg {\n    width: 16px;\n    height: 16px;\n    stroke: ${props => props.theme.color.primary_grey};\n    transition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &:hover {\n    color: ${props => props.theme.color.primary_green_lite};\n    & svg {\n      stroke: ${props => props.theme.color.primary_green_lite};\n    }\n  }\n\n  &:focus {\n    color: ${props => props.theme.color.primary_green_lite};\n    & svg {\n      stroke: ${props => props.theme.color.primary_green_lite};\n    }\n  }\n\n  @media screen and (min-width: 834px) {\n    top: 32px;\n    right: 14px;\n  }\n`;\n","import React from \"react\";\nimport { useData } from \"hooks/useUserData\";\nimport { nanoid } from \"nanoid\";\nimport { AddButton, EditButton, ListWrapper } from \"./Dishes.styled\";\nimport { ReactComponent as EditIcon } from \"../../../images/icons-linear/edit.svg\";\nimport { ReactComponent as AddIcon } from \"../../../images/icons-linear/add.svg\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  openModalRecord,\n  openUpdateRecord,\n  showMealType,\n} from \"../../../redux/Modal/modal-slice\";\n\n\nexport const BreakfastDishes = () => {\n  const dispatch = useDispatch();\n  const { breakfastMeals } = useData();\n\n\n  const generateListItems = () => {\n    const listItems = [];\n\n    if(breakfastMeals.length < 4){\n      const totalItems = (breakfastMeals.length + 4) - breakfastMeals.length;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(breakfastMeals.length === 4){\n      const totalItems = breakfastMeals.length + 1;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(breakfastMeals.length > 4){\n        const totalItems = breakfastMeals.length + 1;\n\n        for (let i = 1; i <= totalItems; i++) {\n          listItems.push(<li key={nanoid()}>{i}</li>);\n        }\n      }\n\n    return listItems;\n  };\n\n\n  const handleOpenUpdateRecord = (id) => {\n    dispatch(openUpdateRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  const handleOpenModalRecord = (id) => {\n    dispatch(openModalRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  return (\n    <ListWrapper>\n      <ul className=\"number-list\">{generateListItems()}</ul>\n      <ul className=\"dish\">\n        {breakfastMeals.map((item) => (\n          <li className=\"list-item\" key={item.mealId}>\n            <div className=\"wrapper\">\n              <p className=\"dish-title\">{item.name}</p>\n\n              <div className=\"nutrients-wrapper\">\n                <p className=\"value\">\n                  <span>Carb.</span>\n                  {item.carbohydrates}\n                </p>\n                <span>Prot.</span>\n                <p className=\"value\">{item.protein}</p>\n                <span>Fat.</span>\n                <p className=\"value\">{item.fat}</p>\n              </div>\n            </div>\n            <EditButton\n              key={item.mealId}\n              className=\"edit-button\"\n              onClick={() =>\n                handleOpenUpdateRecord({\n                  mealType: \"breakfast\",\n                  mealId: item.mealId,\n                })\n              }\n            >\n              <EditIcon />\n              Edit\n            </EditButton>\n          </li>\n        ))}\n        <AddButton\n          alt=\"Add icon\"\n          id=\"breakfast\"\n          onClick={() => handleOpenModalRecord(\"breakfast\")}\n        >\n          <AddIcon alt=\"Add icon\" />\n          Record your meal\n        </AddButton>\n      </ul>\n    </ListWrapper>\n  );\n};\n","import {\n  DishesWrapper,\n  ItemTitle,\n  MealsInfo,\n  NutrientsItem,\n  Title,\n  TotalNutrients,\n} from './FoodInfo.styled';\nimport { ReactComponent as BreakfastImg } from '../../images/icons-illustration/breakfast-image.svg';\nimport { BreakfastDishes } from './Dishes/BreakfastDishes';\nimport { useData } from 'hooks/useUserData';\n\n\n\nexport const Breakfast = () => {\n  const {\n    breakfastTotalFat,\n    breakfastTotalCarbonohidretes,\n    breakfasthTotalProtein,\n  } = useData();\n\n\n  return (\n    <>\n      <div className='order-one'>\n        <MealsInfo>\n          <Title>\n            <BreakfastImg />\n            <h2>Breakfast</h2>\n          </Title>\n          <TotalNutrients>\n            <NutrientsItem>\n              <ItemTitle>\n                Carbohydrates:\n                <span>{breakfastTotalCarbonohidretes}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Protein:\n                <span>{breakfasthTotalProtein}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Fat:\n                <span>{breakfastTotalFat}</span>\n              </ItemTitle>\n            </NutrientsItem>\n          </TotalNutrients>\n        </MealsInfo>\n        <DishesWrapper>\n          <BreakfastDishes />\n        </DishesWrapper>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"hooks/useUserData\";\nimport { nanoid } from \"nanoid\";\nimport { AddButton, EditButton, ListWrapper } from \"./Dishes.styled\";\nimport { ReactComponent as EditIcon } from \"../../../images/icons-linear/edit.svg\";\nimport { ReactComponent as AddIcon } from \"../../../images/icons-linear/add.svg\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  openModalRecord,\n  openUpdateRecord,\n  showMealType,\n} from \"../../../redux/Modal/modal-slice\";\n\n\n\nexport const LunchDishes = () => {\n  const dispatch = useDispatch();\n  const { lunchMeals } = useData();\n\n\n  const generateListItems = () => {\n    const listItems = [];\n\n    if(lunchMeals.length < 4){\n      const totalItems = (lunchMeals.length + 4) - lunchMeals.length;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(lunchMeals.length === 4){\n      const totalItems = lunchMeals.length + 1;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(lunchMeals.length > 4){\n        const totalItems = lunchMeals.length + 1;\n\n        for (let i = 1; i <= totalItems; i++) {\n          listItems.push(<li key={nanoid()}>{i}</li>);\n        }\n      }\n\n    return listItems;\n  };\n\n  \n  const handleOpenUpdateRecord = (id) => {\n    dispatch(openUpdateRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  const handleOpenModalRecord = (id) => {\n    dispatch(openModalRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  return (\n    <ListWrapper>\n      <ul className=\"number-list\">{generateListItems()}</ul>\n      <ul className=\"dish\">\n        {lunchMeals.map((item) => (\n          <li className=\"list-item\" key={item.mealId}>\n            <div className=\"wrapper\">\n              <p className=\"dish-title\">{item.name}</p>\n\n              <div className=\"nutrients-wrapper\">\n                <p className=\"value\">\n                  <span>Carb.</span>\n                  {item.carbohydrates}\n                </p>\n                <span>Prot.</span>\n                <p className=\"value\">{item.protein}</p>\n                <span>Fat.</span>\n                <p className=\"value\">{item.fat}</p>\n              </div>\n            </div>\n            <EditButton\n              className=\"edit-button\"\n              onClick={() =>\n                handleOpenUpdateRecord({\n                  mealType: \"lunch\",\n                  mealId: item.mealId,\n                })\n              }\n            >\n              <EditIcon />\n              Edit\n            </EditButton>\n          </li>\n        ))}\n        <AddButton\n          alt=\"Add icon\"\n          id=\"lunch\"\n          onClick={() => handleOpenModalRecord(\"lunch\")}\n        >\n          <AddIcon alt=\"Add icon\" />\n          Record your meal\n        </AddButton>\n      </ul>\n    </ListWrapper>\n  );\n};\n","import {\n  DishesWrapper,\n  ItemTitle,\n  MealsInfo,\n  NutrientsItem,\n  Title,\n  TotalNutrients,\n} from './FoodInfo.styled';\nimport { ReactComponent as LunchImg } from '../../images/icons-illustration/lunch-image.svg';\nimport { useData } from 'hooks/useUserData';\nimport { LunchDishes } from './Dishes/LunchDishes';\n\n\nexport const Lunch = () => {\n  const { lunchTotalFat, lunchTotalCarbonohidretes, lunchTotalProtein } = useData();\n\n\n  return (\n    <>\n      <div className='order-two'>\n        <MealsInfo>\n          <Title>\n            <LunchImg />\n            <h2>Lunch</h2>\n          </Title>\n          <TotalNutrients>\n            <NutrientsItem>\n              <ItemTitle>\n                Carbohydrates:\n                <span>{lunchTotalCarbonohidretes}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Protein:\n                <span>{lunchTotalProtein}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Fat:\n                <span>{lunchTotalFat}</span>\n              </ItemTitle>\n            </NutrientsItem>\n          </TotalNutrients>\n        </MealsInfo>\n        <DishesWrapper>\n          <LunchDishes />\n        </DishesWrapper>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"hooks/useUserData\";\nimport { nanoid } from \"nanoid\";\nimport { AddButton, EditButton, ListWrapper } from \"./Dishes.styled\";\nimport { ReactComponent as EditIcon } from \"../../../images/icons-linear/edit.svg\";\nimport { ReactComponent as AddIcon } from \"../../../images/icons-linear/add.svg\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  openModalRecord,\n  openUpdateRecord,\n  showMealType,\n} from \"../../../redux/Modal/modal-slice\";\n\n\nexport const DinnerDishes = () => {\n  const dispatch = useDispatch();\n  const { dinnerMeals } = useData();\n\n\n  const generateListItems = () => {\n    const listItems = [];\n\n    if(dinnerMeals.length < 4){\n      const totalItems = (dinnerMeals.length + 4) - dinnerMeals.length;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(dinnerMeals.length === 4){\n      const totalItems = dinnerMeals.length + 1;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(dinnerMeals.length > 4){\n        const totalItems = dinnerMeals.length + 1;\n\n        for (let i = 1; i <= totalItems; i++) {\n          listItems.push(<li key={nanoid()}>{i}</li>);\n        }\n      }\n\n    return listItems;\n  };\n\n\n  const handleOpenUpdateRecord = (id) => {\n    dispatch(openUpdateRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  const handleOpenModalRecord = (id) => {\n    dispatch(openModalRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  return (\n    <ListWrapper>\n      <ul className=\"number-list\">{generateListItems()}</ul>\n      <ul className=\"dish\">\n        {dinnerMeals.map((item) => (\n          <li className=\"list-item\" key={item.mealId}>\n            <div className=\"wrapper\">\n              <p className=\"dish-title\">{item.name}</p>\n\n              <div className=\"nutrients-wrapper\">\n                <p className=\"value\">\n                  <span>Carb.</span>\n                  {item.carbohydrates}\n                </p>\n                <span>Prot.</span>\n                <p className=\"value\">{item.protein}</p>\n                <span>Fat.</span>\n                <p className=\"value\">{item.fat}</p>\n              </div>\n            </div>\n            <EditButton\n              className=\"edit-button\"\n              onClick={() =>\n                handleOpenUpdateRecord({\n                  mealType: \"dinner\",\n                  mealId: item.mealId,\n                })\n              }\n            >\n              <EditIcon />\n              Edit\n            </EditButton>\n          </li>\n        ))}\n        <AddButton\n          alt=\"Add icon\"\n          id=\"dinner\"\n          onClick={() => handleOpenModalRecord(\"dinner\")}\n        >\n          <AddIcon alt=\"Add icon\" />\n          Record your meal\n        </AddButton>\n      </ul>\n    </ListWrapper>\n  );\n};\n","import {\n  DishesWrapper,\n  ItemTitle,\n  MealsInfo,\n  NutrientsItem,\n  Title,\n  TotalNutrients,\n} from './FoodInfo.styled';\nimport { ReactComponent as DinnerImg } from '../../images/icons-illustration/dinner-image.svg';\nimport { useData } from 'hooks/useUserData';\nimport { DinnerDishes } from './Dishes/DinnerDishes';\n\n\n\nexport const Dinner = () => {\n  const { dinnerTotalCarbonohidretes, dinnerTotalFat, dinnerTotalProtein } = useData();\n\n\n  return (\n    <>\n      <div className='order-three'>\n        <MealsInfo>\n          <Title>\n            <DinnerImg />\n            <h2>Dinner</h2>\n          </Title>\n          <TotalNutrients>\n            <NutrientsItem>\n              <ItemTitle>\n                Carbohydrates:\n                <span>{dinnerTotalCarbonohidretes}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Protein:\n                <span>{dinnerTotalProtein}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Fat:\n                <span>{dinnerTotalFat}</span>\n              </ItemTitle>\n            </NutrientsItem>\n          </TotalNutrients>\n        </MealsInfo>\n        <DishesWrapper>\n          <DinnerDishes />\n        </DishesWrapper>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useData } from \"hooks/useUserData\";\nimport { nanoid } from \"nanoid\";\nimport { AddButton, EditButton, ListWrapper } from \"./Dishes.styled\";\nimport { ReactComponent as EditIcon } from \"../../../images/icons-linear/edit.svg\";\nimport { ReactComponent as AddIcon } from \"../../../images/icons-linear/add.svg\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  openModalRecord,\n  openUpdateRecord,\n  showMealType,\n} from \"../../../redux/Modal/modal-slice\";\n\n\nexport const SnackDishes = () => {\n  const dispatch = useDispatch();\n  const { snackMeals } = useData();\n\n\n  const generateListItems = () => {\n    const listItems = [];\n\n    if(snackMeals.length < 4){\n      const totalItems = (snackMeals.length + 4) - snackMeals.length;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(snackMeals.length === 4){\n      const totalItems = snackMeals.length + 1;\n\n      for (let i = 1; i <= totalItems; i++) {\n        listItems.push(<li key={nanoid()}>{i}</li>);\n      }\n    } else if(snackMeals.length > 4){\n        const totalItems = snackMeals.length + 1;\n\n        for (let i = 1; i <= totalItems; i++) {\n          listItems.push(<li key={nanoid()}>{i}</li>);\n        }\n      }\n\n    return listItems;\n  };\n\n\n  const handleOpenUpdateRecord = (id) => {\n    dispatch(openUpdateRecord());\n    dispatch(showMealType(id));\n  };\n\n\n  const handleOpenModalRecord = (id) => {\n    dispatch(openModalRecord());\n    dispatch(showMealType(id));\n  };\n  \n\n  return (\n    <ListWrapper>\n      <ul className=\"number-list\">{generateListItems()}</ul>\n      <ul className=\"dish\">\n        {snackMeals.map((item) => (\n          <li className=\"list-item\" key={item.mealId}>\n            <div className=\"wrapper\">\n              <p className=\"dish-title\">{item.name}</p>\n\n              <div className=\"nutrients-wrapper\">\n                <p className=\"value\">\n                  <span>Carb.</span>\n                  {item.carbohydrates}\n                </p>\n                <span>Prot.</span>\n                <p className=\"value\">{item.protein}</p>\n                <span>Fat.</span>\n                <p className=\"value\">{item.fat}</p>\n              </div>\n            </div>\n            <EditButton\n              className=\"edit-button\"\n              onClick={() =>\n                handleOpenUpdateRecord({\n                  mealType: \"snack\",\n                  mealId: item.mealId,\n                })\n              }\n            >\n              <EditIcon />\n              Edit\n            </EditButton>\n          </li>\n        ))}\n        <AddButton\n          alt=\"Add icon\"\n          id=\"snack\"\n          onClick={() => handleOpenModalRecord(\"snack\")}\n        >\n          <AddIcon alt=\"Add icon\" />\n          Record your meal\n        </AddButton>\n      </ul>\n    </ListWrapper>\n  );\n};\n","import {\n  DishesWrapper,\n  ItemTitle,\n  MealsInfo,\n  NutrientsItem,\n  Title,\n  TotalNutrients,\n} from './FoodInfo.styled';\nimport { ReactComponent as SnackImg } from '../../images/icons-illustration/snack-image.svg';\nimport { useData } from 'hooks/useUserData';\nimport { SnackDishes } from './Dishes/SnackDishes';\n\n\nexport const Snack = () => {\n  const { snackTotalCarbonohidretes, snackTotalProtein, snackTotalFat } = useData();\n  \n\n  return (\n    <>\n      <div className='order-four'>\n        <MealsInfo>\n          <Title>\n            <SnackImg />\n            <h2>Snack</h2>\n          </Title>\n          <TotalNutrients>\n            <NutrientsItem>\n              <ItemTitle>\n                Carbohydrates:\n                <span>{snackTotalCarbonohidretes}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Protein:\n                <span>{snackTotalProtein}</span>\n              </ItemTitle>\n            </NutrientsItem>\n            <NutrientsItem>\n              <ItemTitle>\n                Fat:\n                <span>{snackTotalFat}</span>\n              </ItemTitle>\n            </NutrientsItem>\n          </TotalNutrients>\n        </MealsInfo>\n        <DishesWrapper>\n          <SnackDishes />\n        </DishesWrapper>\n      </div>\n    </>\n  );\n};\n","import { MealsContainer } from './FoodInfo.styled';\nimport { Breakfast } from './Breakfast';\nimport { Lunch } from './Lunch';\nimport { Dinner } from './Dinner';\nimport { Snack } from './Snack';\nimport { Modal } from \"components/Modals/Modals\";\nimport { useModal } from \"hooks/useModal\";\n\n\nexport const FoodInfo = () => {\n  const { isModalOpenUpdateRecord, isModalOpenRecord } = useModal();\n\n\n  return (\n    <>\n      <MealsContainer>\n        <Breakfast />\n        <Lunch />\n        <Dinner />\n        <Snack />\n      </MealsContainer>\n      {(isModalOpenUpdateRecord || isModalOpenRecord) && <Modal />}\n    </>\n  );\n};\n","import { Section } from 'components/Section/Section';\nimport { Container } from 'components/Container/Container';\nimport { BackLink, Title } from './Diary.styled';\nimport { ReactComponent as ArrowIcon } from '../../images/icons-linear/arrow-left.svg';\nimport { FoodInfo } from 'components/Dairy/FoodInfo';\n\nconst DiaryPage = () => {\n  return (\n    <Section>\n      <Container>\n        <Title>\n          <BackLink to={'/main'}>\n            <ArrowIcon alt=\"Arrow Icon\" />\n          </BackLink>\n          <h1>Dairy</h1>\n        </Title>\n        <FoodInfo />\n      </Container>\n    </Section>\n  );\n};\n\nexport default DiaryPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgArrowLeft","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","strokeMiterlimit","strokeLinecap","strokeLinejoin","ForwardRef","ContainersStyle","styled","_templateObject","_taggedTemplateLiteral","Container","children","_jsx","Title","BackLink","NavLink","_templateObject2","theme","color","primary_grey","primary_green_lite","MealsContainer","MealsInfo","_templateObject3","TotalNutrients","_templateObject4","NutrientsItem","_templateObject5","ItemTitle","_templateObject6","DishesWrapper","_templateObject7","primary_black_2","_templateObject8","ListWrapper","primary_white","AddButton","EditButton","SvgEdit","BreakfastDishes","dispatch","useDispatch","breakfastMeals","useData","_jsxs","className","listItems","totalItems","push","nanoid","generateListItems","map","item","name","carbohydrates","protein","fat","onClick","mealType","mealId","openUpdateRecord","showMealType","EditIcon","alt","openModalRecord","AddIcon","Breakfast","_useData","breakfastTotalFat","breakfastTotalCarbonohidretes","breakfasthTotalProtein","_Fragment","BreakfastImg","LunchDishes","lunchMeals","Lunch","lunchTotalFat","lunchTotalCarbonohidretes","lunchTotalProtein","LunchImg","DinnerDishes","dinnerMeals","Dinner","dinnerTotalCarbonohidretes","dinnerTotalFat","dinnerTotalProtein","DinnerImg","SnackDishes","snackMeals","Snack","snackTotalCarbonohidretes","snackTotalProtein","snackTotalFat","SnackImg","FoodInfo","_useModal","useModal","isModalOpenUpdateRecord","isModalOpenRecord","Modal","Section","to","ArrowIcon","size","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}